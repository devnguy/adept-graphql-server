{
	"info": {
		"_postman_id": "11b13bd4-3c3d-492c-861f-d1ed196f5309",
		"name": "adept",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "43b4a701-2738-4bb7-a246-bfad3a4f6f8b",
						"exec": [
							"pm.environment.set('userId', pm.response.json()['data']['registerUser']['userId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  registerUser(\n    input: {\n      name: \"test\"\n      email: \"test10@test.com\"\n      password: \"password\"\n      type: EMPLOYER\n    }\n  ) {\n    userId\n    name\n    email\n    type\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af9d29b7-397b-4023-84d7-94465ca584cf",
						"exec": [
							"pm.environment.set('userId2', pm.response.json()['data']['registerUser']['userId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  registerUser(\n    input: {\n      name: \"test\"\n      email: \"test20@test.com\"\n      password: \"password\"\n      type: EMPLOYER\n    }\n  ) {\n    userId\n    name\n    email\n    type\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user location",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed095139-6096-4bbd-bf96-bbd144f3e3ba",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($updateUserLocationInput: UpdateUserLocationInput!) {\n  updateUserLocation(input: $updateUserLocationInput) {\n    userId\n    name\n    email\n    city\n    state\n  }\n}",
						"variables": "{\n  \"updateUserLocationInput\": {\n    \"userId\": \"{{userId}}\",\n    \"city\": \"Corvallis\",\n    \"state\": \"OR\"\n  }\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "search users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bcdbbbfe-4073-4c42-ad81-dd51153a0c3e",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($searchUsersName: String) {\n  searchUsers(name: $searchUsersName) {\n    name\n    email\n  }\n}",
						"variables": "{\n    \"searchUsersName\": \"test\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create skill",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "05dd8e92-826a-4005-9696-ee83323a3ac3",
						"exec": [
							"pm.environment.set('skillId', pm.response.json()['data']['createSkill']['skillId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($createSkillName: String!) {\n  createSkill(name: $createSkillName) {\n    skillId\n    name\n  }\n}",
						"variables": "{\n  \"createSkillName\": \"test\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get skill by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "57906c94-903e-4082-9f39-3c7afb4ce38c",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($getSkillByIdSkillId: ID!) {\n  getSkillById(skillId: $getSkillByIdSkillId) {\n    skillId\n    name\n  }\n}",
						"variables": "{\n  \"getSkillByIdSkillId\": \"{{skillId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd31389c-f4c5-47a6-834b-bc0517361534",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query {\n  getAllSkills {\n    skillId\n    name\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "search skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6606f46f-3cb1-411f-a06a-382d87dee789",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($searchSkillsName: String) {\n  searchSkills(name: $searchSkillsName) {\n    skillId\n    name\n  }\n}",
						"variables": "{\n  \"searchSkillsName\": \"React\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add skill to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55b73123-7c51-408e-8723-2096f1033eba",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($addSkillToUserUserId: ID!, $addSkillToUserSkillId: ID!) {\n  addSkillToUser(userId: $addSkillToUserUserId, skillId: $addSkillToUserSkillId) {\n    name\n    userId\n    skills {\n      name\n      skillId\n    }\n  }\n}",
						"variables": "{\n  \"addSkillToUserUserId\": \"{{userId}}\",\n  \"addSkillToUserSkillId\": \"{{skillId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add contact to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b620125-a592-4837-aed1-bbb6d6b1f916",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($addContactToUserUserId: ID!, $addContactToUserContactId: ID!) {\n  addContactToUser(userId: $addContactToUserUserId, contactId: $addContactToUserContactId) {\n    name\n    email\n    contacts {\n      name\n      email\n      userId\n    }\n  }\n}",
						"variables": "{\n  \"addContactToUserUserId\": \"{{userId}}\",\n  \"addContactToUserContactId\": \"{{userId2}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add education to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abd85c01-a487-4cef-9aee-c28819a50c76",
						"exec": [
							"pm.environment.set('educationId', pm.response.json()['data']['addEducationToResume']['resume']['education'][0]['educationId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($addEducationToResumeInput: AddEducationToResumeInput!) {\n  addEducationToResume(input: $addEducationToResumeInput) {\n    name\n    email\n    userId\n    resume {\n      resumeId\n      education {\n        educationId\n        name\n        degree\n        startDate\n        endDate\n        major\n      }\n      workExperience {\n        workExpId\n        company\n        position\n        startDate\n        endDate\n        isCurrentPosition\n      }\n    }\n  }\n}",
						"variables": "{\n  \"addEducationToResumeInput\": {\n    \"userId\": \"{{userId}}\",\n    \"name\": \"Oregon State University\",\n    \"degree\": \"Bachelor of Science\",\n    \"startDate\": 1619839551587,\n    \"endDate\": 1619839551587,\n    \"major\": \"Computer Science\",\n    \"gpa\": 4.0\n  }\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add work experience to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd2cfe11-5f3e-4bd2-a00a-ac15252cf214",
						"exec": [
							"pm.environment.set('workExpId', pm.response.json()['data']['addWorkExperienceToResume']['resume']['workExperience'][0]['workExpId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($addWorkExperienceToResumeInput: AddWorkExperienceToResumeInput!) {\n  addWorkExperienceToResume(input: $addWorkExperienceToResumeInput) {\n    userId\n    name\n    email\n    resume {\n      resumeId\n      education {\n        educationId\n        name\n        degree\n      }\n      workExperience {\n        workExpId\n        company\n        position\n        startDate\n        endDate\n        isCurrentPosition\n        city\n        state\n        description\n      }\n    }\n  }\n}",
						"variables": "{\n  \"addWorkExperienceToResumeInput\": {\n    \"userId\": \"{{userId}}\",\n    \"company\": \"Google\",\n    \"position\": \"Software Developer\",\n    \"startDate\": 1619839551587,\n    \"isCurrentPosition\": true,\n    \"city\": \"Seattle\",\n    \"state\": \"WA\",\n    \"description\": \"Really cool job\"\n  }\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create job posting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5cf1620-daeb-459f-a97e-d793d111182b",
						"exec": [
							"pm.environment.set('jobPostId', pm.response.json()['data']['createJobPosting']['jobPostId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($createJobPostingInput: CreateJobPostingInput!) {\n  createJobPosting(input: $createJobPostingInput) {\n    jobPostId\n    positionTitle\n    company\n    datePosted\n    city\n    state\n  }\n}",
						"variables": "{\n  \"createJobPostingInput\": {\n    \"positionTitle\": \"Web Developer\",\n    \"company\": \"Nintendo\",\n    \"city\": \"Seattle\",\n    \"state\": \"WA\",\n    \"salary\": 100000,\n    \"type\": \"FULL_TIME\",\n    \"description\": \"Very cool job\",\n    \"skillsRequired\": [\"{{skillId}}\"],\n    \"postedBy\": \"{{userId2}}\"\n  }\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get job posting by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ac1fa27-2a33-4fd6-b9f5-45d122920e72",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($getJobPostingByIdJobPostId: ID!) {\n  getJobPostingById(jobPostId: $getJobPostingByIdJobPostId) {\n    jobPostId\n    positionTitle\n    company\n    datePosted\n    city\n    state\n    salary\n    type\n    description\n    skillsRequired {\n      skillId\n      name\n    }\n    postedBy {\n      name\n      email\n    }\n    applicants {\n      jobAppId\n      user {\n        name\n        email\n      }\n      dateApplied\n    }\n  }\n}",
						"variables": "{\n  \"getJobPostingByIdJobPostId\": \"{{jobPostId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all job postings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1f78d0e-8c25-4909-bcee-8b5461e2afd0",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query {\n  getAllJobPostings {\n    jobPostId\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "search job postings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5ba8349-3037-47e3-a589-c5559e039583",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($searchJobPostingsCompany: String) {\n  searchJobPostings(company: $searchJobPostingsCompany) {\n    jobPostId\n    positionTitle\n    company\n    city\n    state\n  }\n}",
						"variables": "{\n  \"searchJobPostingsCompany\": \"Nintendo\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create job application",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c6ae942-1589-411a-ae70-ddd279b5cca0",
						"exec": [
							"pm.environment.set('jobAppId', pm.response.json()['data']['createJobApplication']['jobAppId']);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($createJobApplicationInput: CreateJobApplicationInput!) {\n  createJobApplication(input: $createJobApplicationInput) {\n    jobAppId\n    user {\n      name\n      email\n    }\n    jobPosting {\n      positionTitle\n      company\n      jobPostId\n    }\n    dateApplied\n  }\n}",
						"variables": "{\n  \"createJobApplicationInput\": {\n    \"jobPostId\": \"{{jobPostId}}\",\n    \"userId\": \"{{userId}}\"\n  }\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get job application by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bbdc1fd-4fd1-4233-ab72-bf924955934e",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($getJobApplicationByIdJobAppId: ID!) {\n  getJobApplicationById(jobAppId: $getJobApplicationByIdJobAppId) {\n    jobAppId\n    user {\n      userId\n      name\n      email\n      city\n      state\n      resume {\n        education {\n          degree\n        }\n        workExperience {\n          company\n        }\n      }\n    }\n  }\n}",
						"variables": "{\n  \"getJobApplicationByIdJobAppId\": \"{{jobAppId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all job applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "810a544f-2464-462e-b662-5a6b924b9013",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query {\n  getAllJobApplications {\n    jobAppId\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b367b2cf-7c59-44fb-a4e6-98c7a49a7e30",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($getUserByIdUserId: ID!) {\n  getUserById(userId: $getUserByIdUserId) {\n    userId\n    name\n    email\n    type\n    skills {\n      skillId\n      name\n    }\n    jobApplications {\n      jobAppId\n      user {\n        name\n      }\n      jobPosting {\n        positionTitle\n        company\n      }\n      dateApplied\n    }\n    jobPostings {\n      company\n      positionTitle\n    }\n    contacts {\n      name\n      email\n    }\n    city\n    state\n    resume {\n      education {\n        name\n        degree\n      }\n      workExperience {\n        company\n        position\n      }\n    }\n  }\n}",
						"variables": "{\n    \"getUserByIdUserId\": \"{{userId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete skill from user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75b760fb-edd9-4cca-ae29-88a947edccdd",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteSkillFromUserUserId: ID!, $deleteSkillFromUserSkillId: ID!) {\n  deleteSkillFromUser(userId: $deleteSkillFromUserUserId, skillId: $deleteSkillFromUserSkillId) {\n    userId\n    name\n    skills {\n      skillId\n      name\n    }\n  }\n}",
						"variables": "{\n  \"deleteSkillFromUserUserId\": \"{{userId}}\",\n  \"deleteSkillFromUserSkillId\": \"{{skillId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove contact from user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "61eb229d-2ca6-4e11-b2c9-bf64b1b34d33",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($removeContactFromUserUserId: ID!, $removeContactFromUserContactId: ID!) {\n  removeContactFromUser(userId: $removeContactFromUserUserId, contactId: $removeContactFromUserContactId) {\n    userId\n    name\n    contacts {\n      name\n      userId\n    }\n  }\n}",
						"variables": "{\n  \"removeContactFromUserUserId\": \"{{userId}}\",\n  \"removeContactFromUserContactId\": \"{{userId2}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete job application",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eb0a379-9461-421f-ac97-8718c22379eb",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteJobApplicationJobAppId: ID!) {\n  deleteJobApplication(jobAppId: $deleteJobApplicationJobAppId)\n}",
						"variables": "{\n  \"deleteJobApplicationJobAppId\": \"{{jobAppId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete job posting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f26ba1d-2a82-41f5-af64-c56bc6769745",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteJobPostingJobPostId: ID!) {\n  deleteJobPosting(jobPostId: $deleteJobPostingJobPostId)\n}",
						"variables": "{\n  \"deleteJobPostingJobPostId\": \"{{jobPostId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete skill",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "505c3a4a-873a-4e7c-a023-ad1d91728472",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteSkillSkillId: ID!) {\n  deleteSkill(skillId: $deleteSkillSkillId)\n}",
						"variables": "{\n  \"deleteSkillSkillId\": \"{{skillId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete education",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e41e076-96f3-4e56-a5a1-88454d46bbe5",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteEducationEducationId: ID!) {\n  deleteEducation(educationId: $deleteEducationEducationId)\n}",
						"variables": "{\n  \"deleteEducationEducationId\": \"{{educationId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete work experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "224e555b-29bf-4b01-9d4a-628550d34ec3",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteWorkExperienceWorkExpId: ID!) {\n  deleteWorkExperience(workExpId: $deleteWorkExperienceWorkExpId)\n}",
						"variables": "{\n  \"deleteWorkExperienceWorkExpId\": \"{{workExpId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6820c69-d9e5-456d-8acb-8d6ebe371c72",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteUserUserId: ID!) {\n  deleteUser(userId: $deleteUserUserId)\n}",
						"variables": "{\n  \"deleteUserUserId\": \"{{userId}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e54d14f-5284-4055-8f59-95dc616f3003",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Mutation($deleteUserUserId: ID!) {\n  deleteUser(userId: $deleteUserUserId)\n}",
						"variables": "{\n  \"deleteUserUserId\": \"{{userId2}}\"\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}